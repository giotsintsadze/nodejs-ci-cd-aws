pipeline {
    agent any

    environment {
        TF_WORKDIR = './terraform'
    }

    stages {
        stage('Terraform Init') {
            steps {
                dir("${TF_WORKDIR}") {
                    withCredentials([usernamePassword(credentialsId: 'aws-terraform',
                                                     usernameVariable: 'AWS_ACCESS_KEY_ID',
                                                     passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh '''
                          terraform init \
                            -backend-config="bucket=my-terraform-state-bucket-teeest" \
                            -backend-config="key=terraform.tfstate" \
                            -backend-config="region=eu-central-1" \
                            -reconfigure \
                            -force-copy
                        '''
                    }
                }
            }
        }
        stage('Terraform Plan') {
            steps {
                dir("${TF_WORKDIR}") {
                withCredentials([usernamePassword(credentialsId: 'aws-terraform',
                                                usernameVariable: 'AWS_ACCESS_KEY_ID',
                                                passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {

                    sh 'terraform plan -out=tfplan'
                }
              }
            }
        }
        stage('Terraform Apply') {
            steps {
                dir("${TF_WORKDIR}") {
                    withCredentials([usernamePassword(credentialsId: 'aws-terraform',
                                                     usernameVariable: 'AWS_ACCESS_KEY_ID',
                                                     passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh 'terraform apply -auto-approve tfplan'
                    }
                }
            }
        }
    }
    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed.'
        }
    }
}